on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      - name: Clone HF Space repo
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          git clone https://AlbertoRoca96-web:${HF_TOKEN}@huggingface.co/spaces/AlbertoRoca96-web/pointkedex hf-space

      - name: Download usage_data.json and .h5 from release (no jq, no python)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OWNER=AlbertoRoca96
          REPO=pointkedex
          TAG=alroca
          ASSETS=("usage_data.json" "pokedex_resnet50.h5")

          # Get release metadata JSON
          release_json=$(curl -s -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            "https://api.github.com/repos/${OWNER}/${REPO}/releases/tags/${TAG}")

          for NAME in "${ASSETS[@]}"; do
            echo "Locating asset ${NAME} in release ${TAG}"

            # Extract the asset ID by finding the block with the name then its id
            asset_id=$(printf "%s" "$release_json" | tr ',' '\n' \
              | awk -v name="\"name\":\"${NAME}\"" '
                  index($0, name) { found=1 }
                  found && /"id":/ {
                    gsub(/[^0-9]/, "", $0)
                    print $0
                    exit
                  }')

            if [ -z "$asset_id" ]; then
              echo "❌ could not find ID for ${NAME} in release ${TAG}"
              exit 1
            fi

            echo "Found asset ID for ${NAME}: ${asset_id}"

            # Download raw asset via assets API (requires Accept header)
            curl -L \
              -H "Accept: application/octet-stream" \
              -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              "https://api.github.com/repos/${OWNER}/${REPO}/releases/assets/${asset_id}" \
              -o "${NAME}"
          done

      # ── copy every file the app needs ─────────────────────────────
      - name: Sync files
        run: |
          rsync -a --delete \
            Dockerfile predict_server.py index.html app.js styles.css \
            config.js flavor_text.json class_indices.json pokedex_data.json \
            usage_data.json service-worker.js manifest.webmanifest \
            hf-space/

      - name: Commit & push to HF Space
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          cd hf-space
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to push."
          else
            git commit -m "Sync app files from GitHub main"
            git push
          fi
